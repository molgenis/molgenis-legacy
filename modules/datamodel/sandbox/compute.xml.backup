<molgenis name="org.molgenis">
	<module name="compute" label="MCF 0.2 prototype">
		<description>Molgenis compute framework. Each analysis is a protocol,
			extending from the central protocol mechanism but adding the
			computational details via a commandTemplate. Jobs are the Analysis
			protocolApplication</description>
		<entity name="Operation" extends="Protocol">
			<description>
				Operations are standalone definitions of computational 'protocols'
				of analysis. For example: bwa-align. Therefore the Protocol class is
				extended:
				<ul>
					<li>
						<b>commandTemplate</b>
						: Each operation is defined in a commandTemplate, that is, a
						parameterizable description of the computation in Freemarker. The
						parameters are defined via the features of the protocol.
					</li>
					<li>
						<b>interpreter</b>
						: When this protocol is 'applied', the parameters are merged with
						the freemarker script to produce an executable analysis which is
						then interpreted by the chosen interpreter, currently in either
						bash, R or python.
					</li>
				</ul>
			</description>
			<field name="commandTemplate" type="text"
				description="Commandline or a template of an script, e.g. in R. Templating engine is freemarker." />
			<field name="interpreter" type="enum" enum_options="[bash,R,Python]"
				description="the interpreter used to run this command" />
			<field name="Parameters" type="mref" xref_entity="Parameter"
				description="Operation extends Protocol and Protocol has a mref to Observable Features which should be used for Parameter. Parameter extends ObservableFeatures but when I instantiate a Parameter I cannot assign it to a Operation.Features "/>
		</entity>
		<entity name="AnalysisWorkflow" extends="Workflow">
			<description>Analysis is a special kind of workflow that consists of
				operations. By sharing Parameters between the Operations of a
				workflow one can easily create</description>
			<field name="Parameters" type="mref" xref_entity="Parameter"
				description="The overall parameters of the workflow"/>
		</entity>
		<entity name="AnalysisElement" extends="WorkflowElement" xref_label="name">
			<field name="AnalysisWorkflow" type="xref" xref_entity="AnalysisWorkflow"
				description="Reference to the analysis workflow this AnalysisElement is part of. Override WorkflowElement.Workflow to point to Analysis instead of Workflow" />
			<field name="Operation" type="xref" xref_entity="Operation"
				description="Reference to the operation this AnalysisElement is part of. Override WorkflowElement.protocol to refer to operation." />
			<field name="PreviousSteps2" type="mref" xref_entity="AnalysisElement" nillable="true"
				description="Previous steps that need to be done before this protocol can be executed. The name PreviousStep shadows the one defined in the AnalysisWorkflow and it is not accpeted" />
				<unique fields="name" />	
		</entity>
		<entity name="Parameter" extends="ObservableFeature">
			<description>Parameter are the inputs or outputs into an operation.
				It reuses all of ObservableFeature to define the type of the
				parameters. It extends ObserveableFeature with the marking whether
				the parameter is input, output or both.</description>
			<field name="inputOrOutput" type="enum" enum_options="[in,out]"  /><!--default="in"-->
			<field name="iterateOver" type="boolean" default="false"
				description="Use this parameter to iterate over the values in this parameter. Only holds for 'range' and 'list' value types. TODO: support list/range types." />
			<field name="Expression" type="text" nillable="true" 
				description="Programmatic expression for iterative and conditional paramters"/>
			<field name="Evaluator" type="enum" enum_options="[bash,python,R,java]" nillable="true"
				description="The language with which the expression will be evaluated"/>
			<field name="Value" type="text" nillable="true"
				description="the value of the parameter for Jobs"/>
		</entity>
		<entity name="GlobalParameter" extends = "Parameter"
			description="Global parameters assigned to a workflow">
		</entity>
		<entity name="Job" extends="ProtocolApplication">
			<description>A job represents the running of an Operation.
			</description>
			<field name="Timestamp" nillable="false" type="varchar"
				description="Datatime when the job was started." />
			<field name="ComputeResource" type="enum"
				enum_options="[local, cluster, gridgain, cloud, image]" default="local"
				description="The compute backend used" />
			<field name="AnalysisWorkflow" nillable="false" type="xref" xref_entity="AnalysisWorkflow"
				description="The workflow that this Job manages"/>
			<field name="ParametersValues" type="mref" xref_entity="ParameterValue"
				description="The running parameters of the Job"/>
		</entity>
		<entity name="Subjob" implements="Identifiable">
			<description>the individual elements of the analysis job, typically
				scripts run on a cluster.</description>
			<field name="Job" type="xref" nillable="false" xref_entity="Job"
				description="Reference to the job this subjob belongs to." />
			<field name="Operation" type="xref" nillable="false"
				xref_entity="Operation" xref_field="id" xref_label="name"
				description="The analysis done" />
			<field name="StatusCode" nillable="false" type="int"
				description="Status code of this subjob. Currently: 0: start, 1: submit, 2: error, 3: succes" />
			<field name="StatusText" nillable="false" type="varchar"
				length="127" description="Status text of this subjob." />
			<field name="StatusProgress" nillable="true" type="int"
				description="Percentage done." />
			<field name="Nr" nillable="false" type="int"
				description="Order number of this subjob within the job." />
			<field name="Dependencies" type="mref" xref_entity="Subjob"
				description="Other jobs that this job depends on (and should wait for)" />
			<field name="Command" nillable="true" type="text"
				description="The actual command to be sent to the cluster, is a filled in version of the one define in the Operation" />
		</entity>
		<entity name="ParameterValue" extends="ObservedValue">
			<description>Parameter values are just observedValues. The feature is
				as defined in the Protocol; the target usually is the output file
				or even the object the test was applied to (e.g. Sample).
				(recommended) but can also be ommitted.</description>
		</entity>
	</module>
</molgenis>